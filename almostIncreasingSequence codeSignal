# Given a sequence of integers as an array, determine whether it is possible to obtain a strictly increasing sequence by removing no more than one element from the array.

# Note: sequence a0, a1, ..., an is considered to be a strictly increasing if a0 < a1 < ... < an. Sequence containing only one element is also considered to be strictly increasing.

# Example

# For sequence = [1, 3, 2, 1], the output should be
# solution(sequence) = false.

# There is no one element in this array that can be removed in order to get a strictly increasing sequence.

# For sequence = [1, 3, 2], the output should be
# solution(sequence) = true.

# You can remove 3 from the array to get the strictly increasing sequence [1, 2]. Alternately, you can remove 2 to get the strictly increasing sequence [1, 3].


####################RESULT###########################
# Tests passed: 34/38. Execution time limit exceeded on test 35: Program exceeded the execution time limit. Make sure that it completes execution in a few seconds for any possible input.
# Sample tests:
# 19/19
# Hidden tests:
# 15/19
# Score:
# 258/300
def incre(statues):
    length=len(statues)
    # this Forloop goes through all pairs to check if increasing
    for i in range(length-1):
        difff=statues[i+1]-statues[i]
        if difff<=0:
            return False
    return True
def solution(sequence):
    # This forloop removes a single item from sequence and check if it repeats
    for i in range(len(sequence)):
        listen=sequence.copy()
        listen.pop(i)
        popped=listen
        if incre(popped):
            return True
    return False

